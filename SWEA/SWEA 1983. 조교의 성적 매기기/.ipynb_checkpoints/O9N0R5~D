{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "eb6bde84",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "time =  0.0035576820373535156\n",
      "['A-', 'C-', 'C0', 'A-', 'C0', 'A-', 'C+', 'C+', 'B0', 'A0']\n"
     ]
    }
   ],
   "source": [
    "import time\n",
    "import numpy as np\n",
    "\n",
    "s = time.time()\n",
    "\n",
    "f = open(\"input.txt\", 'r', encoding=\"UTF-8\")\n",
    "lines = f.readlines()\n",
    "i, m = 0, 0\n",
    "test_case = 0\n",
    "students = []\n",
    "score = []\n",
    "temp = []\n",
    "\n",
    "for line in lines:\n",
    "    lis = line.split(\" \")\n",
    "    \n",
    "    if i == 0 :\n",
    "        test_case = list(map(int, [k.strip() for k in lis]))[0]\n",
    "    else :  \n",
    "        if len([int (j) for j in [k.strip() for k in lis]]) == 2 :\n",
    "            students.append(list(map(int, [k.strip() for k in lis])))\n",
    "            score.append(list(temp))\n",
    "            temp = []\n",
    "        else : \n",
    "            temp.append(list(map(int, [k.strip() for k in lis])))\n",
    "      \n",
    "\n",
    "    i += 1\n",
    "score.append(list(temp))    \n",
    "    \n",
    "# grade 는 1부터 시작\n",
    "\n",
    "result = []\n",
    "\n",
    "for case in range(0, test_case) :\n",
    "    i = 0\n",
    "    final = []\n",
    "\n",
    "    for num in range(0, students[case][0]) :\n",
    "        final.append(score[case + 1][num][0] * 0.35 \n",
    "                     + score[case + 1][num][1] * 0.45 \n",
    "                     + score[case + 1][num][2] * 0.2)\n",
    "        \n",
    "        if i == students[case][1] - 1 :\n",
    "            select = score[case + 1][num][0] * 0.35 + score[case + 1][num][1] * 0.45 + score[case + 1][num][2] * 0.2\n",
    "        \n",
    "        i += 1\n",
    "    final.sort()\n",
    "    \n",
    "    if final.index(select) / (students[case][0] / 10) < 1 :\n",
    "        result.append('D0')\n",
    "    elif final.index(select) / (students[case][0] / 10) < 2 :\n",
    "        result.append('C-')\n",
    "    elif final.index(select) / (students[case][0] / 10) < 3 :\n",
    "        result.append('C0')\n",
    "    elif final.index(select) / (students[case][0] / 10) < 4 :\n",
    "        result.append('C+')\n",
    "    elif final.index(select) / (students[case][0] / 10) < 5 :\n",
    "        result.append('B-')        \n",
    "    elif final.index(select) / (students[case][0] / 10) < 6 :\n",
    "        result.append('B0')          \n",
    "    elif final.index(select) / (students[case][0] / 10) < 7 :\n",
    "        result.append('B+')\n",
    "    elif final.index(select) / (students[case][0] / 10) < 8 :\n",
    "        result.append('A-')\n",
    "    elif final.index(select) / (students[case][0] / 10) < 9 :\n",
    "        result.append('A0')       \n",
    "    else :\n",
    "        result.append('A+')   \n",
    "\n",
    "e = time.time()\n",
    "\n",
    "print(\"time = \", e-s)   # ms단위로 측정\n",
    "print(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "890be133",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "time =  0.0026869773864746094\n",
      "['A-', 'C-', 'C0', 'A-', 'C0', 'A-', 'C+', 'C+', 'B0', 'A0']\n"
     ]
    }
   ],
   "source": [
    "# mark II\n",
    "\n",
    "import time\n",
    "import numpy as np\n",
    "\n",
    "s = time.time()\n",
    "\n",
    "f = open(\"input.txt\", 'r', encoding=\"UTF-8\")\n",
    "lines = f.readlines()\n",
    "i, m = 0, 0\n",
    "test_case = 0\n",
    "students = []\n",
    "score = []\n",
    "temp = []\n",
    "\n",
    "for line in lines:\n",
    "    lis = line.split(\" \")\n",
    "    \n",
    "    if i == 0 :\n",
    "        test_case = list(map(int, [k.strip() for k in lis]))[0]\n",
    "    else :  \n",
    "        if len([int (j) for j in [k.strip() for k in lis]]) == 2 :\n",
    "            students.append(list(map(int, [k.strip() for k in lis])))\n",
    "            score.append(list(temp))\n",
    "            temp = []\n",
    "        else : \n",
    "            temp.append(list(map(int, [k.strip() for k in lis])))\n",
    "      \n",
    "\n",
    "    i += 1\n",
    "score.append(list(temp))    \n",
    "    \n",
    "# grade 는 1부터 시작\n",
    "\n",
    "result = []\n",
    "grades = ['A+', 'A0', 'A-', 'B+', 'B0', 'B-', 'C+', 'C0', 'C-', 'D0']\n",
    "\n",
    "for case in range(0, test_case) :\n",
    "    i = 0\n",
    "    final = []\n",
    "\n",
    "    for num in range(0, students[case][0]) :\n",
    "        final.append(score[case + 1][num][0] * 0.35                  # 점수 비율에 따른 최종 점수 계산\n",
    "                     + score[case + 1][num][1] * 0.45 \n",
    "                     + score[case + 1][num][2] * 0.2)\n",
    "             \n",
    "        i += 1\n",
    "    select = final[students[case][1] - 1]                            # 똑같은 결과값이 존재x, 그러므로 원하는 학생의 최종 점수는 1개. \n",
    "    final.sort(reverse=True)                                         # A+ 가 0번 임으로 내림차순으로 정렬\n",
    "    \n",
    "    result.append(grades[final.index(select) // (students[case][0] // 10)])   # 선택한 학생의 인덱스 / (학생 수 / 10) 의 정수형을 구하면 해당 등급이 나옴.\n",
    "\n",
    "e = time.time()\n",
    "\n",
    "print(\"time = \", e-s)   # ms단위로 측정\n",
    "print(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "555329a5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7\n",
      "3\n",
      "6\n",
      "31\n",
      "14\n",
      "44\n",
      "25\n",
      "28\n",
      "49\n",
      "85\n",
      "96.39999999999999\n",
      "['A-', 'C-', 'C0', 'A-', 'C0', 'A-', 'C+', 'C+', 'B0', 'A0']\n"
     ]
    }
   ],
   "source": [
    "\n",
    "T = int(input())\n",
    "grades = ['A+', 'A0', 'A-', 'B+', 'B0', 'B-', 'C+', 'C0', 'C-', 'D0']\n",
    "\n",
    "for t in range(1, T + 1):\n",
    "    students, num = map(int, input().split())\n",
    "    final = []\n",
    "    \n",
    "    for i in range(0, students) :\n",
    "        score = list(map(int,input().split()))\n",
    "        final.append((score[0] * 0.35) + (score[1] * 0.45) + (score[2] * 0.2))        \n",
    "        \n",
    "    select = final[num - 1]\n",
    "        \n",
    "    final.sort(reverse=True)\n",
    "    result = final.index(select) // (students // 10)\n",
    "        \n",
    "    print(\"#{} {}\".format(t, grades[result]))               \n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
